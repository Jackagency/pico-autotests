plugins {
    id 'java'
    id "io.qameta.allure" version "2.9.6"
    id "io.freefair.lombok" version "6.0.0-m2"
}


group 'org.example'
version '1.0-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.17.3",
    selenideVersion = "6.3.2",
    restAssuredVersion = "5.0.1",
    junitVersion = "5.8.2"


dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "org.aspectj:aspectjweaver:1.9.8",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:4.3.1",
            'com.github.javafaker:javafaker:1.0.2',
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:3.22.0",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

allure {
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.17.2")
            }
        }

    }
    report {
        version.set("2.17.2")
    }
}


test {
    useJUnitPlatform()
}